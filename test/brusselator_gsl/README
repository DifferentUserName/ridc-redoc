An implicit Euler step function the nonlinear Brusselator system 
using Newton's method and the GNU Scientific Library.  This code 
assumes an existing properly configured GSL.  Edit the Makefile 
to change how GSL is linked.


Makefile: type make to compile the code, this produces brusselator.exe.  

** NOTE: depending on the implementation, a user might need to also
link to the library -lgslcblas **

Fourth order RIDC with 10000 time steps can be run by:

$./brusselator.exe 4 10000

ode.h: header file which defines the PARAMETER structure and declares the 
        functions defined in ode.cpp
ode.cpp: initializes the PARAMETER structure, and defines functions for 
       	the initial condition and the right hand side of the ODE system.
run.sh: shell script to run the executable for different numbers of time 
        steps for a convergence study.
convergence.m: matlab or octave script which uses the data produced by 
        run.sh to estimate the order of convergence.
reference/ : reference solutions for the Brusselator example
